"""
–ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ callback-—Ñ—É–Ω–∫—Ü–∏–∏
"""

from bin.buttons import get_general_buttons

from work_materials.globals import cursor

from telegram import KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove

import re
import psycopg2


def start(bot, update, user_data):
    buttons = [
        [
            KeyboardButton(text='üñ§'),
            KeyboardButton(text='üê¢'),
        ],
        [
            KeyboardButton(text='ü¶á'),
            KeyboardButton(text='‚òò'),
        ],
        [
            KeyboardButton(text='üçÜ'),
            KeyboardButton(text='üåπ'),
            KeyboardButton(text='üçÅ'),
        ],
    ]
    user_data.update({"status": "selecting_castle"})
    bot.send_message(chat_id=update.message.chat_id,
                     text="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–º–æ–∫, –º–æ–±–æ–≤ –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏—Å—ã–ª–∞—Ç—å.\n\n"
                          "<em>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è üñ§–°–∫–∞–ª—ã, üê¢–¢–æ—Ä—Ç—É–≥–∏, ü¶á–ù–æ—á–∏ –∏ "
                          "(—á–∞—Å—Ç–∏—á–Ω–æ) ‚òòÔ∏è–û–ø–ª–æ—Ç–∞.</em>",
                     parse_mode='HTML',
                     reply_markup=ReplyKeyboardMarkup(buttons, one_time_keyboard=True, resize_keyboard=True))


def selected_castle(bot, update, user_data):
    mes = update.message
    user_data.update({"castle": mes.text, "status": "selecting_lvls"})
    bot.send_message(chat_id=mes.chat_id,
                     text="–ó–∞–º–æ–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.\n\n–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω —É—Ä–æ–≤–Ω–µ–π –ø–æ–ª—É—á–∞–µ–º—ã—Ö –º–æ–±–æ–≤. –û—Ç –í–∞—à–µ–≥–æ —É—Ä–æ–≤–Ω—è –ø—Ä–∏–º–µ—Ä–Ω–æ "
                          "+/-5 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ. –¢–∞–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –í–∞—à —É—Ä–æ–≤–µ–Ω—å üèÖ<code>20</code>, "
                          "—Ç–æ <code>15</code>-<code>30</code>.\n\n"
                          "(—Å–∏–Ω—Ç–∞–∫—Å–∏—Å: MIN-MAX):",
                     reply_markup=ReplyKeyboardRemove(), parse_mode='HTML')


def selected_lvls(bot, update, user_data):
    mes = update.message
    castle = user_data.get("castle")
    parse = re.search("(\\d+)[-: /\\\\](\\d+)", mes.text)
    if parse is None:
        bot.send_message(chat_id=mes.chat_id, text="–ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.\n–ü—Ä–∏–º–µ—Ä: 15-25")
        return
    lvl_min = int(parse.group(1))
    lvl_max = int(parse.group(2))
    if lvl_min < 0 or lvl_max < lvl_min:
        bot.send_message(chat_id=mes.chat_id, text="–ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –£—Ä–æ–≤–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏, "
                                                   "–≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ –Ω–µ –º–µ–Ω—å—à–µ –ø–µ—Ä–≤–æ–≥–æ ")
        return
    reply_markup = get_general_buttons(user_data)
    request = "insert into players(id, username, castle, lvl_min, lvl_max) values (%s, %s, %s, %s, %s)"
    try:
        cursor.execute(request, (mes.from_user.id, mes.from_user.username, castle, lvl_min, lvl_max))
        bot.send_message(chat_id=mes.chat_id,
                         text="–£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É.\n"
                              "–¢–µ–ø–µ—Ä—å –≤–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –º–æ–±–∞—Ö –∏–∑ {} —Å–æ —Å—Ä–µ–¥–Ω–µ–º —É—Ä–æ–≤–Ω–µ–º –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ "
                              "{} - {}".format(castle, lvl_min, lvl_max),
                         reply_markup=reply_markup)
    except psycopg2.IntegrityError:
        request = "update players set username = %s, castle = %s, lvl_min = %s, lvl_max = %s where id = %s"
        cursor.execute(request, (mes.from_user.username, castle, lvl_min, lvl_max, mes.from_user.id))
        bot.send_message(chat_id=mes.chat_id, text="–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.", reply_markup=reply_markup)
    user_data.pop("status")


def info(bot, update):
    mes = update.message
    response = "‚ÑπÔ∏è –ò–Ω—Ñ–æ:\n"
    request = "select castle, lvl_min, lvl_max, active from players where id = %s limit 1"
    cursor.execute(request, (mes.from_user.id,))
    row = cursor.fetchone()
    if row is None:
        bot.send_message(chat_id=mes.chat_id, text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–æ–≤–∞ (/start)")
        return
    castle, lvl_min, lvl_max, active = row
    response += "üí¨–°—Ç–∞—Ç—É—Å: <b>{}</b>\n".format("‚úÖ –ê–∫—Ç–∏–≤–Ω–æ" if active else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ")
    response += "üè∞–ó–∞–º–æ–∫: {}\n".format(castle)
    response += "üèÖ–î–∏–∞–ø–∞–∑–æ–Ω —É—Ä–æ–≤–Ω–µ–π: <b>{}</b> - <b>{}</b>\n".format(lvl_min, lvl_max)
    response += "\n‚ÜîÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: /start\n"
    response += "üî∫–í–∫–ª—é—á–∏—Ç—å: /on\n" if not active else "üîª–û—Ç–∫–ª—é—á–∏—Ç—å: /off"
    bot.send_message(chat_id=mes.chat_id, text=response, parse_mode='HTML')


def change_status(bot, update):
    mes = update.message
    set_active = 'on' in mes.text
    request = "update players set active = %s where id = %s"
    cursor.execute(request, (set_active, mes.from_user.id))
    if set_active:
        response = "–ì–æ—Ç–æ–≤–æ! –í—ã —Å–Ω–æ–≤–∞ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."
    else:
        response = "–ì–æ—Ç–æ–≤–æ. –í—ã –Ω–µ –±—É–¥–µ—Ç–µ –±–æ–ª—å—à–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.\n" \
                   "–°–Ω–æ–≤–∞ –≤–∫–ª—é—á–∏—Ç—å: /on"
    bot.send_message(chat_id=mes.chat_id, text=response)
